{"ast":null,"code":"import React, { useState, useRef, useEffect, createContext, useMemo, useContext, useCallback } from 'react';\nfunction useLoadGsiScript(options = {}) {\n  const {\n    nonce,\n    onScriptLoadSuccess,\n    onScriptLoadError\n  } = options;\n  const [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = useState(false);\n  const onScriptLoadSuccessRef = useRef(onScriptLoadSuccess);\n  onScriptLoadSuccessRef.current = onScriptLoadSuccess;\n  const onScriptLoadErrorRef = useRef(onScriptLoadError);\n  onScriptLoadErrorRef.current = onScriptLoadError;\n  useEffect(() => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = 'https://accounts.google.com/gsi/client';\n    scriptTag.async = true;\n    scriptTag.defer = true;\n    scriptTag.nonce = nonce;\n    scriptTag.onload = () => {\n      var _a;\n      setScriptLoadedSuccessfully(true);\n      (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadSuccessRef);\n    };\n    scriptTag.onerror = () => {\n      var _a;\n      setScriptLoadedSuccessfully(false);\n      (_a = onScriptLoadErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadErrorRef);\n    };\n    document.body.appendChild(scriptTag);\n    return () => {\n      document.body.removeChild(scriptTag);\n    };\n  }, [nonce]);\n  return scriptLoadedSuccessfully;\n}\nconst GoogleOAuthContext = createContext(null);\nfunction GoogleOAuthProvider({\n  clientId,\n  nonce,\n  onScriptLoadSuccess,\n  onScriptLoadError,\n  children\n}) {\n  const scriptLoadedSuccessfully = useLoadGsiScript({\n    nonce,\n    onScriptLoadSuccess,\n    onScriptLoadError\n  });\n  const contextValue = useMemo(() => ({\n    clientId,\n    scriptLoadedSuccessfully\n  }), [clientId, scriptLoadedSuccessfully]);\n  return React.createElement(GoogleOAuthContext.Provider, {\n    value: contextValue\n  }, children);\n}\nfunction useGoogleOAuth() {\n  const context = useContext(GoogleOAuthContext);\n  if (!context) {\n    throw new Error('Google OAuth components must be used within GoogleOAuthProvider');\n  }\n  return context;\n}\nfunction extractClientId(credentialResponse) {\n  var _a;\n  const clientId = (_a = credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.clientId) !== null && _a !== void 0 ? _a : credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.client_id;\n  return clientId;\n}\nconst containerHeightMap = {\n  large: 40,\n  medium: 32,\n  small: 20\n};\nfunction GoogleLogin({\n  onSuccess,\n  onError,\n  useOneTap,\n  promptMomentNotification,\n  type = 'standard',\n  theme = 'outline',\n  size = 'large',\n  text,\n  shape,\n  logo_alignment,\n  width,\n  locale,\n  click_listener,\n  containerProps,\n  ...props\n}) {\n  const btnContainerRef = useRef(null);\n  const {\n    clientId,\n    scriptLoadedSuccessfully\n  } = useGoogleOAuth();\n  const onSuccessRef = useRef(onSuccess);\n  onSuccessRef.current = onSuccess;\n  const onErrorRef = useRef(onError);\n  onErrorRef.current = onError;\n  const promptMomentNotificationRef = useRef(promptMomentNotification);\n  promptMomentNotificationRef.current = promptMomentNotification;\n  useEffect(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    if (!scriptLoadedSuccessfully) return;\n    (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.initialize({\n      client_id: clientId,\n      callback: credentialResponse => {\n        var _a;\n        if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\n          return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\n        }\n        const {\n          credential,\n          select_by\n        } = credentialResponse;\n        onSuccessRef.current({\n          credential,\n          clientId: extractClientId(credentialResponse),\n          select_by\n        });\n      },\n      ...props\n    });\n    (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.renderButton(btnContainerRef.current, {\n      type,\n      theme,\n      size,\n      text,\n      shape,\n      logo_alignment,\n      width,\n      locale,\n      click_listener\n    });\n    if (useOneTap) (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\n    return () => {\n      var _a, _b, _c;\n      if (useOneTap) (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clientId, scriptLoadedSuccessfully, useOneTap, type, theme, size, text, shape, logo_alignment, width, locale]);\n  return React.createElement(\"div\", {\n    ...containerProps,\n    ref: btnContainerRef,\n    style: {\n      height: containerHeightMap[size],\n      ...(containerProps === null || containerProps === void 0 ? void 0 : containerProps.style)\n    }\n  });\n}\nfunction googleLogout() {\n  var _a, _b, _c;\n  (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.disableAutoSelect();\n}\n\n/* eslint-disable import/export */\nfunction useGoogleLogin({\n  flow = 'implicit',\n  scope = '',\n  onSuccess,\n  onError,\n  onNonOAuthError,\n  overrideScope,\n  state,\n  ...props\n}) {\n  const {\n    clientId,\n    scriptLoadedSuccessfully\n  } = useGoogleOAuth();\n  const clientRef = useRef();\n  const onSuccessRef = useRef(onSuccess);\n  onSuccessRef.current = onSuccess;\n  const onErrorRef = useRef(onError);\n  onErrorRef.current = onError;\n  const onNonOAuthErrorRef = useRef(onNonOAuthError);\n  onNonOAuthErrorRef.current = onNonOAuthError;\n  useEffect(() => {\n    var _a;\n    if (!scriptLoadedSuccessfully) return;\n    const clientMethod = flow === 'implicit' ? 'initTokenClient' : 'initCodeClient';\n    const client = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts.oauth2[clientMethod]({\n      client_id: clientId,\n      scope: overrideScope ? scope : `openid profile email ${scope}`,\n      callback: response => {\n        var _a, _b;\n        if (response.error) return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef, response);\n        (_b = onSuccessRef.current) === null || _b === void 0 ? void 0 : _b.call(onSuccessRef, response);\n      },\n      error_callback: nonOAuthError => {\n        var _a;\n        (_a = onNonOAuthErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onNonOAuthErrorRef, nonOAuthError);\n      },\n      state,\n      ...props\n    });\n    clientRef.current = client;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clientId, scriptLoadedSuccessfully, flow, scope, state]);\n  const loginImplicitFlow = useCallback(overrideConfig => {\n    var _a;\n    return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestAccessToken(overrideConfig);\n  }, []);\n  const loginAuthCodeFlow = useCallback(() => {\n    var _a;\n    return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestCode();\n  }, []);\n  return flow === 'implicit' ? loginImplicitFlow : loginAuthCodeFlow;\n}\nfunction useGoogleOneTapLogin({\n  onSuccess,\n  onError,\n  promptMomentNotification,\n  cancel_on_tap_outside,\n  prompt_parent_id,\n  state_cookie_domain,\n  hosted_domain,\n  disabled\n}) {\n  const {\n    clientId,\n    scriptLoadedSuccessfully\n  } = useGoogleOAuth();\n  const onSuccessRef = useRef(onSuccess);\n  onSuccessRef.current = onSuccess;\n  const onErrorRef = useRef(onError);\n  onErrorRef.current = onError;\n  const promptMomentNotificationRef = useRef(promptMomentNotification);\n  promptMomentNotificationRef.current = promptMomentNotification;\n  useEffect(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    if (!scriptLoadedSuccessfully) return;\n    if (disabled) {\n      (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\n      return;\n    }\n    (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.initialize({\n      client_id: clientId,\n      callback: credentialResponse => {\n        var _a;\n        if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\n          return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\n        }\n        const {\n          credential,\n          select_by\n        } = credentialResponse;\n        onSuccessRef.current({\n          credential,\n          clientId: extractClientId(credentialResponse),\n          select_by\n        });\n      },\n      hosted_domain,\n      cancel_on_tap_outside,\n      prompt_parent_id,\n      state_cookie_domain\n    });\n    (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\n    return () => {\n      var _a, _b, _c;\n      (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\n    };\n  }, [clientId, scriptLoadedSuccessfully, cancel_on_tap_outside, prompt_parent_id, state_cookie_domain, hosted_domain, disabled]);\n}\n\n/**\r\n * Checks if the user granted all the specified scope or scopes\r\n * @returns True if all the scopes are granted\r\n */\nfunction hasGrantedAllScopesGoogle(tokenResponse, firstScope, ...restScopes) {\n  var _a, _b, _c;\n  if (!(window === null || window === void 0 ? void 0 : window.google)) return false;\n  return ((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAllScopes(tokenResponse, firstScope, ...restScopes)) || false;\n}\n\n/**\r\n * Checks if the user granted any of the specified scope or scopes.\r\n * @returns True if any of the scopes are granted\r\n */\nfunction hasGrantedAnyScopeGoogle(tokenResponse, firstScope, ...restScopes) {\n  var _a, _b, _c;\n  if (!(window === null || window === void 0 ? void 0 : window.google)) return false;\n  return ((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAnyScope(tokenResponse, firstScope, ...restScopes)) || false;\n}\nexport { GoogleLogin, GoogleOAuthProvider, googleLogout, hasGrantedAllScopesGoogle, hasGrantedAnyScopeGoogle, useGoogleLogin, useGoogleOneTapLogin };","map":null,"metadata":{},"sourceType":"module"}